// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STFC_Web.Data;

namespace STFC_Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "b2bc6021-88d4-4eef-973e-4b160d22661f",
                            ConcurrencyStamp = "96a0a8ab-c35c-40a0-b0b5-881464019102",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("OfficerTags", b =>
                {
                    b.Property<Guid>("OfficersId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("TEXT");

                    b.HasKey("OfficersId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("Link_Officer_Tag");
                });

            modelBuilder.Entity("STFC_Web.Data.Entities.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("STFC_Web.Data.Entities.Faction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Factions");
                });

            modelBuilder.Entity("STFC_Web.Data.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("STFC_Web.Data.Entities.Officer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CaptainManeuverDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("CaptainManeuverName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ClassId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FactionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Image")
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("OfficerAbilityDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("OfficerAbilityName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OfficerAbilityRank1Value")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OfficerAbilityRank2Value")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OfficerAbilityRank3Value")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OfficerAbilityRank4Value")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OfficerAbilityRank5Value")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RankName_11_15")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RankResourceCost_11_15Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RankResourceCost_16_20Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RankResourceCost_1_5Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RankResourceCost_21_30Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RankResourceCost_6_10Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RankShardsReq_11_15")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RankShardsReq_16_20")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RankShardsReq_1_5")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RankShardsReq_21_30")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RankShardsReq_6_10")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RankXP_11_15")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RankXP_16_20")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RankXP_1_5")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RankXP_21_30")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RankXP_6_10")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("RarityId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SynergyCommand")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SynergyEngineering")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SynergyScience")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("FactionId");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RankResourceCost_11_15Id");

                    b.HasIndex("RankResourceCost_16_20Id");

                    b.HasIndex("RankResourceCost_1_5Id");

                    b.HasIndex("RankResourceCost_21_30Id");

                    b.HasIndex("RankResourceCost_6_10Id");

                    b.HasIndex("RarityId");

                    b.ToTable("Officers");
                });

            modelBuilder.Entity("STFC_Web.Data.Entities.RankResourceCost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ActiveNanoprobes")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CommandBadges")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EngineeringBadges")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FederationCredits")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IndependantCredits")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KlingonCredits")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int?>("RomulanCredits")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ScienceBadges")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RankResourceCosts");
                });

            modelBuilder.Entity("STFC_Web.Data.Entities.Rarity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Rarities");
                });

            modelBuilder.Entity("STFC_Web.Data.Entities.Tags", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("OfficerTags", b =>
                {
                    b.HasOne("STFC_Web.Data.Entities.Officer", null)
                        .WithMany()
                        .HasForeignKey("OfficersId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("STFC_Web.Data.Entities.Tags", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("STFC_Web.Data.Entities.Officer", b =>
                {
                    b.HasOne("STFC_Web.Data.Entities.Class", "Class")
                        .WithMany("Officers")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("STFC_Web.Data.Entities.Faction", "Faction")
                        .WithMany()
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("STFC_Web.Data.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("STFC_Web.Data.Entities.RankResourceCost", "RankResourceCost_11_15")
                        .WithMany()
                        .HasForeignKey("RankResourceCost_11_15Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("STFC_Web.Data.Entities.RankResourceCost", "RankResourceCost_16_20")
                        .WithMany()
                        .HasForeignKey("RankResourceCost_16_20Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("STFC_Web.Data.Entities.RankResourceCost", "RankResourceCost_1_5")
                        .WithMany()
                        .HasForeignKey("RankResourceCost_1_5Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("STFC_Web.Data.Entities.RankResourceCost", "RankResourceCost_21_30")
                        .WithMany()
                        .HasForeignKey("RankResourceCost_21_30Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("STFC_Web.Data.Entities.RankResourceCost", "RankResourceCost_6_10")
                        .WithMany()
                        .HasForeignKey("RankResourceCost_6_10Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("STFC_Web.Data.Entities.Rarity", "Rarity")
                        .WithMany()
                        .HasForeignKey("RarityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Class");

                    b.Navigation("Faction");

                    b.Navigation("Group");

                    b.Navigation("RankResourceCost_1_5");

                    b.Navigation("RankResourceCost_11_15");

                    b.Navigation("RankResourceCost_16_20");

                    b.Navigation("RankResourceCost_21_30");

                    b.Navigation("RankResourceCost_6_10");

                    b.Navigation("Rarity");
                });

            modelBuilder.Entity("STFC_Web.Data.Entities.Class", b =>
                {
                    b.Navigation("Officers");
                });
#pragma warning restore 612, 618
        }
    }
}
